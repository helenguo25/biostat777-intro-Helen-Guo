mutate(age_group = gsub("Total, 16 years and older", "Total", age_group)) %>%
mutate(age_group = gsub(" years", "", age_group)) %>%
mutate(age_group = gsub("65 and older", "65+", age_group))
# Subset employed_gender.csv from 1979 to 2011 to match the time frame from the earnings_female.csv dataset
employed_gender <- employed_gender %>%
filter(year >= 1979, year <= 2011)
# Merge two datasets by year
combined_data <- earnings_female %>%
inner_join(employed_gender, by = "year")
# Keep only part-time % columns since the full-time % columns are redundant: full-time % = 100% - part-time. The data does not contain percentage unemployed
clean_data <- combined_data %>%
select(year, age_group, percent_female, total_part_time, part_time_female, part_time_male)
library(ggplot2)
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data, aes(x = year, y = percent_female,color = age_group, group = age_group)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
scale_color_discrete(name = "Age Group") +
theme_minimal() +
facet_wrap(~age_group, scales = "free_y")
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group = "Total")
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_bar() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_line() +
geom_smooth(method = "lm") +
labs(
title = "Female salary % of male salary from 1979-2011",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm") +
labs(
title = "% of part-time working males from 1979-2011",
x = "Year",
y = "% of part-time working females",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
# Create line plot of percentage of part-time working males over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_point() +
geom_smooth(method = "lm") +
labs(
title = "% of part-time working males from 1979-2011",
x = "Year",
y = "% of part-time working males",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "% of part-time working males from 1979-2011",
x = "Year",
y = "% of part-time working females",
caption = "Source: TidyTuesday 'Women in the Workforce' 2019 github repo"
) +
theme_minimal()
library(ggplot2)
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data, aes(x = year, y = percent_female,color = age_group, group = age_group)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
subtitle = "Women 34+ years of age have lower female salary % of male salary than other age groups"
x = "Year",
library(ggplot2)
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data, aes(x = year, y = percent_female,color = age_group, group = age_group)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
subtitle = "Women 34+ years of age have lower female salary % of male salary than other age groups",
x = "Year",
y = "Female salary % of male salary",
caption = "SSource: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
scale_color_discrete(name = "Age Group") +
theme_minimal() +
facet_wrap(~age_group, scales = "free_y")
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage of part-time working females from 1979-2011",
subtitle = "Percentage of part-time working females fluctuated and decreased over time"
x = "Year",
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage of part-time working females from 1979-2011",
subtitle = "Percentage of part-time working females fluctuated and decreased over time",
x = "Year",
y = "% part-time working females",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
# Create line plot of percentage of part-time working males over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage part-time working males from 1979-2011",
subtitle = "Percentage of part-time working males increased over time",
x = "Year",
y = "% part-time working males",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
library(ggplot2)
# Subset
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create line plot of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage of part-time working females from 1979-2011",
subtitle = "Percentage of part-time working females decreased over time",
x = "Year",
y = "% part-time working females",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
# Create line plot of percentage of part-time working males over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage part-time working males from 1979-2011",
subtitle = "Percentage of part-time working males increased over time",
x = "Year",
y = "% part-time working males",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
install.packages("pandoc")
head(clean_data)
install.packages("pandoc")
tuesdata <- tidytuesdayR::tt_load("2022-03-05")
tuesdata <- tidytuesdayR::tt_load("2019-03-05")
earnings_female <- tuesdata$earnings_female
employed_gender <- tuesdata$employed_gender
#| label: "setup"
# Load libraries
library(dplyr)
library(ggplot2)
# Read in data
tuesdata <- tidytuesdayR::tt_load("2019-03-05")
earnings_female <- tuesdata$earnings_female
employed_gender <- tuesdata$employed_gender
# Rename 'percent' column to 'percent_female' and 'group' to 'age_group' and 'Year' to 'year' for clarity and consistency in earnings_female.csv
earnings_female <- earnings_female %>%
rename(percent_female = percent, age_group = group, year=Year)
# Relabel 'Total, 16 years and older' to 'Total' in 'age_group' column. Remove anytime 'years' appears in age_group column and relabel '65 years and older' to '65+'
earnings_female <- earnings_female %>%
mutate(age_group = gsub("Total, 16 years and older", "Total", age_group)) %>%
mutate(age_group = gsub(" years", "", age_group)) %>%
mutate(age_group = gsub("65 and older", "65+", age_group))
# Subset employed_gender.csv from 1979 to 2011 to match the time frame from the earnings_female.csv dataset
employed_gender <- employed_gender %>%
filter(year >= 1979, year <= 2011)
# Merge two datasets by year
combined_data <- earnings_female %>%
inner_join(employed_gender, by = "year")
# Keep only part-time % columns since the full-time % columns are redundant: full-time % = 100% - part-time. The data does not contain percentage unemployed
clean_data <- combined_data %>%
select(year, age_group, percent_female, total_part_time, part_time_female, part_time_male)
# View clean_data
head(clean_data)
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data, aes(x = year, y = percent_female,color = age_group, group = age_group)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
subtitle = "Women 34+ years of age have lower female salary % of male salary than other age groups",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
scale_color_discrete(name = "Age Group") +
theme_minimal() +
facet_wrap(~age_group, scales = "free_y")
# Subset to all ages combined
clean_data_total <- clean_data %>%
filter(age_group == "Total")
# Create scatter plot with regression line of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage of part-time working females from 1979-2011",
subtitle = "Percentage of part-time working females decreased over time",
x = "Year",
y = "% part-time working females",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
# Create line plot of percentage of part-time working males over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage part-time working males from 1979-2011",
subtitle = "Percentage of part-time working males increased over time",
x = "Year",
y = "% part-time working males",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
# Create scatter plot with regression line of percentage of part-time working females over time
ggplot(clean_data_total, aes(x = year, y = part_time_female)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage of part-time working females from 1979-2011",
subtitle = "Percentage of part-time working females only decreased slightly over time",
x = "Year",
y = "% part-time working females",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
# Create line plot of percentage of part-time working males over time
ggplot(clean_data_total, aes(x = year, y = part_time_male)) +
geom_point() +
geom_smooth(method = "lm", formula = 'y~x') +
labs(
title = "Percentage part-time working males from 1979-2011",
subtitle = "Percentage of part-time working males increased slightly over time",
x = "Year",
y = "% part-time working males",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' github repository"
) +
theme_minimal()
library(here)
if (!dir.exists(here("data"))) {
dir.create(here("data"))
}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
url_csv <- tuesdata$earnings_female
earnings_female <- readr::read_csv(url_csv)
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
}
earnings_female <- readRDS(here("data", "earnings_female.RDS"))
if (!dir.exists(here("data"))) {
dir.create(here("data"))
}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))
}
employed_gender <- tuesdata$employed_gender
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))
}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "employed_gender.RDS"))) {
### Save the file to RDS objects
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))
}
#| label: "setup"
# Load libraries
library(dplyr)
library(ggplot2)
library(here)
# Read in data
#tuesdata <- tidytuesdayR::tt_load("2019-03-05")
#earnings_female <- tuesdata$earnings_female
#employed_gender <- tuesdata$employed_gender
# Avoid API limit for re-compiling the document and avoid the need to re-download data using code below:
## Tests if a directory named "data" exists locally
# if (!dir.exists(here("data"))) {
#     dir.create(here("data"))}
#
# ## Saves data only once (not each time you knit a R Markdown)
# if (!file.exists(here("data", "earnings_female.RDS"))) {
#     ### Save the file to RDS objects
#     saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
#   saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
#
# if (!file.exists(here("data", "employed_gender.RDS"))) {
#     ### Save the file to RDS objects
#    saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
# Read in the .RDS dataset locally from our computing environment
earnings_female <- readRDS(here("data", "earnings_female.RDS"))
employed_gender <- readRDS(here("data", "employed_gender.RDS"))
View(earnings_female)
# Rename 'percent' column to 'percent_female' and 'group' to 'age_group' and 'Year' to 'year' for clarity and consistency in earnings_female.csv
earnings_female <- earnings_female %>%
rename(percent_female = percent, age_group = group, year=Year)
View(earnings_female)
View(employed_gender)
tuesdata <- tidytuesdayR::tt_load("2019-03-05")
# Merge two datasets by year
combined_data <- earnings_female %>%
inner_join(employed_gender, by = "year")
# Keep only part-time % columns since the full-time % columns are redundant: full-time % = 100% - part-time. The data do not contain percentage unemployed
clean_data <- combined_data %>%
select(year, age_group, percent_female, total_part_time, part_time_female, part_time_male)
# View clean_data
head(clean_data)
# Load libraries
library(dplyr)
library(ggplot2)
library(here)
# Read in data
tuesdata <- tidytuesdayR::tt_load("2019-03-05")
earnings_female <- tuesdata$earnings_female
employed_gender <- tuesdata$employed_gender
# Tests if a directory named "data" exists locally
if (!dir.exists(here("data"))) {
dir.create(here("data"))}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
if (!file.exists(here("data", "employed_gender.RDS"))) {
### Save the file to RDS objects
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
# Read in the .RDS dataset locally from our computing environment
earnings_female <- readRDS(here("data", "earnings_female.RDS"))
employed_gender <- readRDS(here("data", "employed_gender.RDS"))
# Rename 'percent' column to 'percent_female' and 'group' to 'age_group' and 'Year' to 'year' for clarity and consistency in earnings_female.csv
earnings_female <- earnings_female %>%
rename(percent_female = percent, age_group = group, year=Year)
View(earnings_female)
# Read in data
tuesdata <- tidytuesdayR::tt_load("2019-03-05")
earnings_female <- tuesdata$earnings_female
employed_gender <- tuesdata$employed_gender
# Avoid API limit for re-compiling the document and avoid the need to re-download data using code below:
# Tests if a directory named "data" exists locally
if (!dir.exists(here("data"))) {
dir.create(here("data"))}
## Saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "earnings_female.RDS"))) {
### Save the file to RDS objects
saveRDS(earnings_female, file = here("data", "earnings_female.RDS"))
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
if (!file.exists(here("data", "employed_gender.RDS"))) {
### Save the file to RDS objects
saveRDS(employed_gender, file = here("data", "employed_gender.RDS"))}
# Read in the .RDS dataset locally from our computing environment
earnings_female <- readRDS(here("data", "earnings_female.RDS"))
employed_gender <- readRDS(here("data", "employed_gender.RDS"))
View(earnings_female)
# Read in the .RDS dataset locally from our computing environment
earnings_female <- readRDS(here("data", "earnings_female.RDS"))
employed_gender <- readRDS(here("data", "employed_gender.RDS"))
# Rename 'percent' column to 'percent_female' and 'group' to 'age_group' and 'Year' to 'year' for clarity and consistency in earnings_female.csv
earnings_female <- earnings_female %>%
rename(percent_female = percent, age_group = group, year=Year)
# Relabel 'Total, 16 years and older' to 'Total' in 'age_group' column. Remove anytime 'years' appears in age_group column and relabel '65 years and older' to '65+'
earnings_female <- earnings_female %>%
mutate(age_group = gsub("Total, 16 years and older", "Total", age_group)) %>%
mutate(age_group = gsub(" years", "", age_group)) %>%
mutate(age_group = gsub("65 and older", "65+", age_group))
# Subset employed_gender.csv from 1979 to 2011 to match the time frame from the earnings_female.csv dataset
employed_gender <- employed_gender %>%
filter(year >= 1979, year <= 2011)
# Merge two datasets by year
combined_data <- earnings_female %>%
inner_join(employed_gender, by = "year")
# Keep only part-time % columns since the full-time % columns are redundant: full-time % = 100% - part-time. The data do not contain percentage unemployed
clean_data <- combined_data %>%
select(year, age_group, percent_female, total_part_time, part_time_female, part_time_male)
# View clean_data
head(clean_data)
# Create line plot of female percentage of male salary over time, faceted by age group
ggplot(clean_data, aes(x = year, y = percent_female,color = age_group, group = age_group)) +
geom_line() +
labs(
title = "Female salary % of male salary from 1979-2011",
subtitle = "Women 34+ years of age have lower female salary % of male salary than other age groups",
x = "Year",
y = "Female salary % of male salary",
caption = "Source: TidyTuesday 2019 'Women in the Workforce' GitHub repository"
) +
scale_color_discrete(name = "Age Group") +
theme_minimal() +
facet_wrap(~age_group, scales = "free_y")
setwd("~/Documents/Computing/Term 2/Helen Guo Website")
setwd("~/Documents/Computing/Term 2/Helen Guo Website")
